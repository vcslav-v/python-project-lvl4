name: deploy

on:  [push]

jobs:
  CD:
    name: CD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Builder
        uses: docker/setup-buildx-action@v1

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}
      
      - name: Push to Github Container Registry
        uses: docker/build-push-action@v2
        with:
          context: ./app/
          version: latest
          file: ./app/Dockerfile
          push: true
          tags: docker.pkg.github.com/${{ github.repository }}:latest

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Set and run ansible
        env:
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
          ANSIBLE_INVENTORY: ${{ secrets.ANSIBLE_INVENTORY }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          ANSIBLE_PRIVATE_KEY_FILE: ansible/.ssh/ans_key
          INVENTORY_FILE: ansible/inventory.ini
          ANSIBLE_VAULT_PASSWORD_FILE: ansible/.ansible-vault-password
          ANSIBLE_HOST_KEY_CHECKING: False

          REPOSITORY: ${{ github.repository }}/app
        run: |
          echo "$ANSIBLE_VAULT_PASSWORD" > $ANSIBLE_VAULT_PASSWORD_FILE
          mkdir ansible/.ssh
          echo "$SSH_KEY" > $ANSIBLE_PRIVATE_KEY_FILE
          chmod 600 $ANSIBLE_PRIVATE_KEY_FILE
          echo "$ANSIBLE_INVENTORY" > $INVENTORY_FILE
          ansible-playbook -i $INVENTORY_FILE ansible/deploy_to_DO.yml
